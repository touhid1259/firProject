var printer_data = <%= return_json(@merged_printer_data) %>
var data_len = printer_data.length
if(data_len == 0){
  alert('Nothing to show');

} else {
    console.log(data_len);
    $(".printer-graph-ten-second").html("");
    var graph2d;
    var dataset; // x and y axis data array for the graph2d
    var groups;

    function drawPrinterGraph(gpitems){
      var container = $(".printer-graph-ten-second")[0];
      var items = gpitems;
      groups = new vis.DataSet();

      for(i = 0; i <= <%= @group_track %>; i++ ){
        groups.add({
            id: i,
            content: 'groups',
            className: 'datewise-data'
        });
      }

      for(i = 0; i < gpitems.length; i++ ){
        groups.update({
            id: gpitems[i].group,
            content: 'groups',
            className: gpitems[i].group == 0 ? 'datewise-data' : gpitems[i].cls_id
        });
      }

      dataset = new vis.DataSet(items);
      var options = {
        start: gpitems[0]['x'],
        end: gpitems.length > 20 ? gpitems[19]['x'] : gpitems[gpitems.length - 1]['x'],
        drawPoints: {
          onRender: function(item, graph2d){
            if(item.group != 0){
              return {
                style: 'circle',
                size: 5,
                className: item.cls_id
              }

            }else {
              return {
                style: 'circle',
                size: 4,
                className: 'datewise-data'
              }

            }
          },
          style: 'circle', // square, circle
          size: 4
        },
        interpolation: false,
        shaded: {
          orientation: 'bottom' // top, bottom
        },
        dataAxis: {
          left: {
            title: {
              text: 'Power'
            }
          }
        }
      };

      graph2d = new vis.Graph2d(container, dataset, groups ,options);
    }

    drawPrinterGraph(printer_data);
    $('.show-printer-status').show();

}
